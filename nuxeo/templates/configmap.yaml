apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "nuxeo.fullname" . }}-{{ .Values.nuxeo.tenantId }}-conf
  namespace: {{ .Values.nuxeo.tenantId }}
  labels:
    app: {{ template "nuxeo.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    role: config
data:
  nuxeo.conf: |-
    # Additional nuxeo.conf parameters
    nuxeo.stream.work.log.codec=avro
    nuxeo.stream.audit.log.codec=avro
    nuxeo.stream.pubsub.log.codec=avro
{{- if or .Values.mongodb.deploy .Values.tags.mongodb }}
    nuxeo.templates=default,mongodb
    nuxeo.mongodb.server=mongodb://{{ .Release.Name }}-mongodb.nx-shared-storage.svc.cluster.local:27017
    nuxeo.mongodb.dbname={{ .Values.nuxeo.tenantId }}
{{- end }}
{{- if or .Values.postgresql.deploy .Values.tags.postgresql }}
    nuxeo.templates=default,postgresql
    nuxeo.db.name={{ .Values.nuxeo.postgresql.dbname }}
    nuxeo.db.user={{ .Values.nuxeo.postgresql.username }}
    nuxeo.db.password={{ .Values.nuxeo.postgresql.password }}
    nuxeo.db.host={{ .Release.Name }}-postgresql
    nuxeo.db.port=5432
{{- end }}
{{- if or .Values.elasticsearch.deploy .Values.tags.elasticsearch }}
    elasticsearch.client=RestClient
    elasticsearch.clusterName={{ .Values.nuxeo.elasticsearch.clusterName }}
    elasticsearch.addressList=http://{{ .Release.Name }}-elasticsearch-client.nx-shared-storage.svc.cluster.local:9200
    elasticsearch.indexName={{ .Values.nuxeo.tenantId }}
    elasticsearch.indexNumberOfReplicas={{ .Values.nuxeo.elasticsearch.indexNumberOfReplicas }}
    elasticsearch.restClient.socketTimeoutMs={{ .Values.nuxeo.elasticsearch.restClient.socketTimeoutMs }}
    elasticsearch.restClient.connectionTimeoutMs={{ .Values.nuxeo.elasticsearch.restClient.connectionTimeoutMs }}
{{- end }}
{{- if or .Values.kafka.deploy .Values.tags.kafka}}
    kafka.enabled=true
    kafka.bootstrap.servers={{ .Release.Name }}-kafka-headless.nx-shared-storage.svc.cluster.local:9092
    nuxeo.stream.work.enabled=true
    nuxeo.pubsub.provider=stream
    kafka.topicPrefix={{ .Values.nuxeo.tenantId }}-
{{- end }}
{{- if or .Values.redis.deploy .Values.tags.redis }}
{{- if or .Values.mongodb.deploy .Values.tags.mongodb }}
    nuxeo.templates=default,mongodb,redis
{{- else if or  .Values.postgresql.deploy  .Values.tags.postgresql }}
    nuxeo.templates=default,postgresql,redis
{{- else }}
    nuxeo.templates=default,redis
{{- end }}
    nuxeo.redis.host={{ .Release.Name }}-redis-master
    nuxeo.work.queuing=redis
    nuxeo.redis.enabled=true
{{- end }}
{{- if .Values.nuxeo.customParams }}
{{ .Values.nuxeo.customParams | indent 4 }}
{{- end }}
{{- if .Values.tags.gcs }}
    nuxeo.core.binarymanager=org.nuxeo.ecm.core.storage.gcp.GoogleStorageBinaryManager
    nuxeo.gcp.storage.bucket= {{ .Values.gcs.bucketname }}
    nuxeo.gcp.storage.bucket_prefix={{ .Values.nuxeo.tenantId }}
    nuxeo.gcp.project={{ .Values.gcs.project }}
    nuxeo.gcp.credentials=/opt/nuxeo/gcp/gcp-credentials.json
{{- end }}
    repository.clustering.enabled=true     
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "nuxeo.fullname" . }}-{{ .Values.nuxeo.tenantId }}-gcp-config
  namespace: {{ .Values.nuxeo.tenantId }}
  labels:
    app: {{ template "nuxeo.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    role: config
data:
  gcp-credentials.json: |-
    {
      "type": "service_account",
      "project_id": "jx-preprod",
    }

